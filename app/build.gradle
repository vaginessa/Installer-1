apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.test.installer1"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'
}

task generateSources << {
    println '=============generateSources============='
    def process = "python moveAPK.py".execute()
    // Wait till the process completes before continuing
    int exitValue = process.waitFor()
    println "Process exited with value $exitValue"
}

/*assembleDebug.doLast {
    def process = "python moveAPK.py".execute()
    // Wait till the process completes before continuing
    int exitValue = process.waitFor()
    println "Process exited with value $exitValue"
}*/

tasks.whenTaskAdded { task ->
    if (task.name == 'assembleDebug') {

        //task.dependsOn 'checkstyle', 'findbugs', 'pmd', 'lint'
        println '=============assembleDebug============='
        task.doLast{
            println '=============generateSources============='
            def process = "python moveAPK.py".execute()
            // Wait till the process completes before continuing
            int exitValue = process.waitFor()
            println "Process exited with value $exitValue"
        }
    } else if (task.name == 'assembleRelease') {
        //task.dependsOn 'checkstyle', 'findbugs', 'pmd', 'lint'
        println '=============assembleRelease============='
    }
}